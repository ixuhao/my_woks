" vundle
set nocompatible
filetype off 
source $VIMRUNTIME/vimrc_example.vim
"source $VIMRUNTIME/mswin.vim
behave mswin

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'asins/vimcdoc'
Bundle 'davidhalter/jedi-vim'
Bundle 'ervandew/supertab'
Bundle 'tpope/vim-fugitive'
" zen coding
Bundle 'vim-scripts/Emmet.vim'
Bundle 'scrooloose/syntastic'
Bundle 'jmcantrell/vim-virtualenv'
Bundle 'Rykka/riv.vim'
"Bundle 'vim-scripts/pep8'
Bundle 'vim-scripts/jpythonfold.vim'

"Syntax
"Bundle 'pangloss/vim-javascript'
Bundle 'jelera/vim-javascript-syntax'
Bundle 'digitaltoad/vim-jade'
"Bundle 'mattn/emmet-vim'

" Colorschemes
"Bundle 'altercation/vim-colors-solarized'

" Completion
Bundle 'ahayman/vim-nodejs-complete'

Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'honza/vim-snippets'
"node general - gf
Bundle 'moll/vim-node'

"node snippets; dump this to vim-snippets
" Bundle 'jamescarr/snipmate-nodejs'

"Bundle 'jpythonfold'
"Bundle 'pep8'
"Bundle 'pyflakes-vim'
"Bundle 'vimpy'

Bundle 'tpope/vim-surround'
Bundle 'jiangmiao/auto-pairs'

"note
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-notes'

" octopress
Bundle 'tangledhelix/vim-octopress'
autocmd BufNewFile,BufRead *.markdown,*.textile,*.md set filetype=octopress

set nobackup
set showcmd
set noswf
set hlsearch
set autoindent
set cindent
set wildmenu

syntax on
filetype plugin indent on

if version >= 603
    set helplang=cn
endif

" set nu
set formatoptions+=mM
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoread
set wmh=0
set nrformats=hex
set laststatus=2 "always show statusline
set completeopt=menuone,longest,preview


map <Leader>cd :cd %:p:h<CR>
map ;; :%s:::g<Left><Left><Left>
map ;' :%s:::cg<Left><Left><Left><Left>
map <C-K> <C-W>k<C-W>_
map <C-J> <C-W>j<C-W>_

colorscheme evening
autocmd BufNewFile *.py 0r ~/.vim/skeleton.py
autocmd BufWritePre,FileWritePre *.py ks|call LastMod()|'s

fun LastMod()
  if line("$") > 20
    let l = 20
  else
    let l = line("$")
  endif
  exe "1," . l . "g/Last modified: /s/Last modified: .*/Last modified: " .
  \ strftime("%Y %b %d %X")
endfun

function! CurDir()
  let curdir = substitute(getcwd(), '/Users/haoxu/', "~/", "g")
  return curdir
endfunction

set statusline=%<%f%h%m%r\ [%{CurDir()}]\ [%{fugitive#statusline()}]%=\ 0x%B\ %b\ %Y\ %{&ff}\ %{&enc}\ %{&fenc}\ %l\/\%L,%c%V\ %P
set laststatus=2 "always show statusline

"call pathogen#infect()
au FileType vim,javascript setl shiftwidth=2
au FileType vim,javascript setl tabstop=2
au FileType javascript call JavaScriptFold()
