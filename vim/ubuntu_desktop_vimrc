
set nocompatible
filetype off 
source $VIMRUNTIME/vimrc_example.vim
"source $VIMRUNTIME/mswin.vim
behave mswin

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/syntastic'
Bundle 'davidhalter/jedi-vim'
Bundle 'ervandew/supertab'
Bundle 'jmcantrell/vim-virtualenv'
Bundle 'vim-scripts/pep8'
Bundle 'vim-scripts/jpythonfold.vim'
Bundle 'mattn/emmet-vim'
Bundle 'pangloss/vim-javascript'
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"

"Bundle 'jpythonfold'
"Bundle 'pep8'
"Bundle 'pyflakes-vim'
"Bundle 'vimpy'

set nobackup
set showcmd
set noswf
set hlsearch
set autoindent
set cindent
set wildmenu

filetype plugin indent on

" set nu
set formatoptions+=mM
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoread
set wmh=0
set nrformats=hex
set laststatus=2 "always show statusline
set completeopt=menuone,longest,preview

syntax on

map <Leader>cd :cd %:p:h<CR>
map ;; :%s:::g<Left><Left><Left>
map ;' :%s:::cg<Left><Left><Left><Left>
map <C-K> <C-W>k<C-W>_
map <C-J> <C-W>j<C-W>_

colorscheme evening
autocmd BufNewFile *.py 0r ~/.vim/skeleton.py
autocmd BufWritePre,FileWritePre *.py ks|call LastMod()|'s

fun LastMod()
  if line("$") > 20
    let l = 20
  else
    let l = line("$")
  endif
  exe "1," . l . "g/Last modified: /s/Last modified: .*/Last modified: " .
  \ strftime("%Y %b %d %X")
endfun

"call pathogen#infect()
